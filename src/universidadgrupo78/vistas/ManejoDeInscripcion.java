/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo78.vistas;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadgrupo78.acesodatos.AlumnoData;
import universidadgrupo78.entidades.Alumno;
import universidadgrupo78.entidades.Materia;
import universidadgrupo78.acesodatos.InscripcionData;
import universidadgrupo78.acesodatos.MateriaData;
import universidadgrupo78.entidades.Inscripcion;

/**
 *
 * @author Joni
 */
public class ManejoDeInscripcion extends javax.swing.JInternalFrame {
    private DefaultTableModel model=new DefaultTableModel();
    /**
     * Creates new form ManejoDeInscripcion
     */
    
    
    //Crea todo, prepara alumnos para ser pasados y crea la vista
    public ManejoDeInscripcion() {
        initComponents();
        armarcabezera();
        jRNoInscrip.setSelected(true);
        jComboBoxAlumnos.setSelectedItem(1);
        
        Alumno selectedAlumno = (Alumno) jComboBoxAlumnos.getSelectedItem();
          AlumnoData alumnosData = new AlumnoData();
        List<Alumno> alumnos= alumnosData.listarAlumnos();

        jComboBoxAlumnos.removeAllItems();
        
        alumnos.forEach((alumno) -> {
            jComboBoxAlumnos.addItem(alumno);
        });
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRInscrip = new javax.swing.JRadioButton();
        jRNoInscrip = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBInscribir = new javax.swing.JButton();
        jBAnular = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jComboBoxAlumnos = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione un alumno:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Listado de Materias");

        buttonGroup1.add(jRInscrip);
        jRInscrip.setText("Materias Inscriptas");
        jRInscrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRInscripActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRNoInscrip);
        jRNoInscrip.setText("Materias no inscriptas");
        jRNoInscrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRNoInscripActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Año"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBInscribir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBInscribir.setText("Inscribir");
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });

        jBAnular.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBAnular.setText("Anular Inscripción");
        jBAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnularActionPerformed(evt);
            }
        });

        jBSalir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jComboBoxAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAlumnosActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 105, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Manejo de Inscripción");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addContainerGap(244, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRInscrip)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRNoInscrip))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBInscribir)
                        .addGap(76, 76, 76)
                        .addComponent(jBAnular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRInscrip)
                    .addComponent(jRNoInscrip))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInscribir)
                    .addComponent(jBAnular)
                    .addComponent(jBSalir))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Anula la materia que este cursando un alumno
    private void jBAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnularActionPerformed
    if(jRInscrip.isSelected()==true){
        Alumno x = (Alumno) jComboBoxAlumnos.getSelectedItem();
        if(x == null && jRNoInscrip.isSelected()==true){return;}
        
        int selectedRow = jTable1.getSelectedRow();
        int filaS=jTable1.getSelectedRow();
        
        if (filaS!=-1){
            //Fijar en que materia estamos
            String materiaName = jTable1.getValueAt(selectedRow, 0).toString();
            int codigo = Integer.parseInt(jTable1.getValueAt(selectedRow, 2).toString());
          
        //Confirmar Seleccion    
        int confirmResult = JOptionPane.showConfirmDialog(
            this,
            "¿Desea borrar la inscripción?",
            "Confirmar Borrado",
            JOptionPane.YES_NO_OPTION
                
        );
            if (confirmResult == JOptionPane.YES_OPTION) {
            // Confirmo Seleccion
            InscripcionData inscripcionData = new InscripcionData();
            inscripcionData.borrarInscripcion(x.getIdAlumno(), codigo);

            //Refresh de la lista
            List<Materia> updatedMaterias = inscripcionData.obtenerMateriasCursadas(x.getIdAlumno());
            refreshTable(updatedMaterias);
        }
            
            
              
        }else{
            JOptionPane.showMessageDialog(this, "Porfavor seleccione una fila");
        }   
    }
    }//GEN-LAST:event_jBAnularActionPerformed
    
    //Codigo de Ayuda para refrescar tabla
    private void refreshTable(List<Materia> materias) {
        model.setRowCount(0);

        for (Materia materia : materias) {
            model.addRow(new Object[]{materia.getNombre(), materia.getAnioMateria(), materia.getIdMateria()});
        }
    }

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jBSalirActionPerformed

    //Seleccion de alumnos
    private void jComboBoxAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAlumnosActionPerformed
        Alumno selectedAlumno = (Alumno) jComboBoxAlumnos.getSelectedItem();
        
        InscripcionData materias = new InscripcionData();
        if(selectedAlumno==null){
            return;
        }
        model.setRowCount(0);
        jTable1.removeAll();
        if(jRInscrip.isSelected() == true){
          
         List<Materia> materiasCursadas = materias.obtenerMateriasCursadas(selectedAlumno.getIdAlumno());
         cargarDatos(materiasCursadas);
         
        }else if(jRNoInscrip.isSelected()==true){
            
            List<Materia> materiasNOCursadas =  materias.obtenerMateriasNOCursadas(selectedAlumno.getIdAlumno());
            cargarDatos(materiasNOCursadas);
            
        }
      
    }//GEN-LAST:event_jComboBoxAlumnosActionPerformed
    //Inscribe alumno a materia
    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
    if(jRInscrip.isSelected()==false){    //Crear Alumno
        Alumno alumnoInscribir = (Alumno) jComboBoxAlumnos.getSelectedItem();
        if(alumnoInscribir == null ){return;}
        InscripcionData materias = new InscripcionData();
        int selectedRow = jTable1.getSelectedRow();
        int filaS=jTable1.getSelectedRow();
        
        if (filaS!=-1){
            //Crear Materia
            int codigo = Integer.parseInt(jTable1.getValueAt(selectedRow, 2).toString());
            MateriaData materiaData = new MateriaData();
            Materia materia = materiaData.buscarMateria(codigo);
            
            if(materia!=null){
            //Crear Inscripcion
            Inscripcion inscripcion = new Inscripcion();
            inscripcion.setAlumno(alumnoInscribir);
            inscripcion.setMateria(materia);
            inscripcion.setNota(0);
            
            //Crear una Inscripcion
            InscripcionData inscripcionData = new InscripcionData();
            inscripcionData.guardarInscripcion(inscripcion);
            
            //Refrescar la lista con materias NO Cursadas
            List<Materia> updatedMaterias = inscripcionData.obtenerMateriasNOCursadas(alumnoInscribir.getIdAlumno());
            refreshTable(updatedMaterias);
            }
        }
    }   
    }//GEN-LAST:event_jBInscribirActionPerformed

    //Eleccion entre table
    private void jRInscripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRInscripActionPerformed
       Alumno selectedAlumno = (Alumno) jComboBoxAlumnos.getSelectedItem();
        
        InscripcionData materias = new InscripcionData();
        if(selectedAlumno==null){
            return;
        }
        model.setRowCount(0);
        jTable1.removeAll();
        
          
         List<Materia> materiasCursadas = materias.obtenerMateriasCursadas(selectedAlumno.getIdAlumno());
         cargarDatos(materiasCursadas);
         
        
       // TODO add your handling code here:
    }//GEN-LAST:event_jRInscripActionPerformed

    //Eleccion entre tabla
    private void jRNoInscripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRNoInscripActionPerformed
        Alumno selectedAlumno = (Alumno) jComboBoxAlumnos.getSelectedItem();
        
        InscripcionData materias = new InscripcionData();
        if(selectedAlumno==null){
            return;
        }
        model.setRowCount(0);
        jTable1.removeAll();
       
            List<Materia> materiasNOCursadas =  materias.obtenerMateriasNOCursadas(selectedAlumno.getIdAlumno());
            cargarDatos(materiasNOCursadas);
            
        
    }//GEN-LAST:event_jRNoInscripActionPerformed
   
    //Crea la tabla
    private void armarcabezera(){
        
        model.addColumn("Materia");
        model.addColumn("Año");
        model.addColumn("Codigo");
        jTable1.setModel(model);
        
    }
    
    //Agrega alumnos a la tabla
    public void cargarDatos(List<Materia> materias){
        for(Materia materia : materias){
        model.addRow(new Object[]{materia.getNombre(),materia.getAnioMateria(),materia.getIdMateria()});
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBAnular;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jComboBoxAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRInscrip;
    private javax.swing.JRadioButton jRNoInscrip;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}